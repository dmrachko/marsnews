/**
 ********************************************************************************
 *** RankedCountriesServiceFactory.java                                       ***
 *** The factory for the IRankedCountriesService implementation.              ***
 *** generated by AnoSiteGenerator (ASG), Version: 1.3.3                      ***
 *** Copyright (C) 2005 - 2010 Anotheria.net, www.anotheria.net               ***
 *** All Rights Reserved.                                                     ***
 ********************************************************************************
 *** Don't edit this code, if you aren't sure                                 ***
 *** that you do exactly know what you are doing!                             ***
 *** It's better to invest time in the generator, as into the generated code. ***
 ********************************************************************************
 */

package net.anotheria.marsnews.gen.rankedcountries.service;

import net.anotheria.anoprise.metafactory.ServiceFactory;
import net.anotheria.asg.service.ASGService;
import net.anotheria.moskito.core.dynamic.MoskitoInvokationProxy;
import net.anotheria.moskito.core.predefined.ServiceStatsCallHandler;
import net.anotheria.moskito.core.predefined.ServiceStatsFactory;

import java.util.concurrent.atomic.AtomicInteger;

public class RankedCountriesServiceFactory implements ServiceFactory<IRankedCountriesService>{

	private static AtomicInteger instanceCounter = new AtomicInteger(0);
	private static IRankedCountriesService defaultInstance = createRankedCountriesService();

	public IRankedCountriesService create(){
		return createRankedCountriesService();
	}

	public static IRankedCountriesService createRankedCountriesService(){
		MoskitoInvokationProxy proxy = new MoskitoInvokationProxy(
			createInstance(),
			new ServiceStatsCallHandler(),
			new ServiceStatsFactory(),
			"IRankedCountriesService-"+instanceCounter.incrementAndGet(),
			"service",
			"asg-jdbc",
			IRankedCountriesService.class, ASGService.class
		);
		return (IRankedCountriesService) proxy.createProxy();
	}

	private static IRankedCountriesService createInstance(){
		return RankedCountriesServiceImpl.getInstance();
	}

	static IRankedCountriesService getDefaultInstance(){
		return defaultInstance;
	}
}

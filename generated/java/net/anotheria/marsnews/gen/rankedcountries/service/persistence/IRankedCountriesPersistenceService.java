/**
 ***************************************************************************************
 *** IRankedCountriesPersistenceService.java                                         ***
 *** Generator: net.anotheria.asg.generator.model.db.JDBCPersistenceServiceGenerator ***
 *** generated by AnoSiteGenerator (ASG), Version: 1.3.3                             ***
 *** Copyright (C) 2005 - 2010 Anotheria.net, www.anotheria.net                      ***
 *** All Rights Reserved.                                                            ***
 ***************************************************************************************
 *** Don't edit this code, if you aren't sure                                        ***
 *** that you do exactly know what you are doing!                                    ***
 *** It's better to invest time in the generator, as into the generated code.        ***
 ***************************************************************************************
 */

package net.anotheria.marsnews.gen.rankedcountries.service.persistence;

import java.util.List;
import net.anotheria.anodoc.query2.QueryProperty;
import net.anotheria.util.slicer.Segment;
import net.anotheria.marsnews.gen.rankedcountries.data.RankedCountry;

public interface IRankedCountriesPersistenceService{

	// Generated by: class net.anotheria.asg.generator.model.db.JDBCPersistenceServiceGenerator.generateInterface

	/**
	 * Returns all RankedCountrys objects stored.
	 */
	public List<RankedCountry> getRankedCountrys() throws RankedCountriesPersistenceServiceException;

	/**
	 * Deletes a RankedCountry object by id.
	 */
	public void deleteRankedCountry(String id) throws RankedCountriesPersistenceServiceException;

	/**
	 * Deletes multiple RankedCountry object.
	 */
	public void deleteRankedCountrys(List<RankedCountry> list) throws RankedCountriesPersistenceServiceException;

	/**
	 * Returns the RankedCountry object with the specified id.
	 */
	public RankedCountry getRankedCountry(String id) throws RankedCountriesPersistenceServiceException, RankedCountryNotFoundInRankedCountriesPersistenceServiceException;

	/**
	 * Imports a new RankedCountry object.
	 * Returns the imported version.
	 */
	public RankedCountry importRankedCountry(RankedCountry rankedcountry) throws RankedCountriesPersistenceServiceException;

	/**
	 * Imports multiple new RankedCountry objects.
	 * Returns the imported versions.
	 */
	public List<RankedCountry> importRankedCountrys(List<RankedCountry> list) throws RankedCountriesPersistenceServiceException;

	/**
	 * Creates a new RankedCountry object.
	 * Returns the created version.
	 */
	public RankedCountry createRankedCountry(RankedCountry rankedcountry) throws RankedCountriesPersistenceServiceException;

	/**
	 * Creates multiple new RankedCountry objects.
	 * Returns the created versions.
	 */
	public List<RankedCountry> createRankedCountrys(List<RankedCountry> list) throws RankedCountriesPersistenceServiceException;

	/**
	 * Updates a RankedCountry object.
	 * Returns the updated version.
	 */
	public RankedCountry updateRankedCountry(RankedCountry rankedcountry) throws RankedCountriesPersistenceServiceException;

	/**
	 * Updates multiple RankedCountry object.
	 * Returns the updated versions.
	 */
	public List<RankedCountry> updateRankedCountrys(List<RankedCountry> list) throws RankedCountriesPersistenceServiceException;

	/**
	 * Returns all RankedCountry objects which match the given property or properties.
	 */
	public List<RankedCountry> getRankedCountrysByProperty(QueryProperty... properties) throws RankedCountriesPersistenceServiceException;

	/**
	 * Returns all RankedCountrys count.
	 */
	public int getRankedCountrysCount() throws RankedCountriesPersistenceServiceException;

	/**
	 * Returns RankedCountrys objects segment.
	 */
	public List<RankedCountry> getRankedCountrys(Segment aSegment) throws RankedCountriesPersistenceServiceException;

	/**
	 * Returns RankedCountry objects segment which match the given property or properties.
	 */
	public List<RankedCountry> getRankedCountrysByProperty(Segment aSegment, QueryProperty... properties) throws RankedCountriesPersistenceServiceException;

}
